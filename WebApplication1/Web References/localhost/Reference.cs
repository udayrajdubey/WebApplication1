//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WebApplication1.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebService1Soap", Namespace="http://tempuri.org/")]
    public partial class WebService1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SumOfNumsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadXmlFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateUnformattedOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService1() {
            this.Url = global::WebApplication1.Properties.Settings.Default.WebApplication1_localhost_WebService1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SumOfNumsCompletedEventHandler SumOfNumsCompleted;
        
        /// <remarks/>
        public event ReadXmlFilesCompletedEventHandler ReadXmlFilesCompleted;
        
        /// <remarks/>
        public event GenerateUnformattedCompletedEventHandler GenerateUnformattedCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SumOfNums", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SumOfNums(int First, int Second) {
            object[] results = this.Invoke("SumOfNums", new object[] {
                        First,
                        Second});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SumOfNumsAsync(int First, int Second) {
            this.SumOfNumsAsync(First, Second, null);
        }
        
        /// <remarks/>
        public void SumOfNumsAsync(int First, int Second, object userState) {
            if ((this.SumOfNumsOperationCompleted == null)) {
                this.SumOfNumsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSumOfNumsOperationCompleted);
            }
            this.InvokeAsync("SumOfNums", new object[] {
                        First,
                        Second}, this.SumOfNumsOperationCompleted, userState);
        }
        
        private void OnSumOfNumsOperationCompleted(object arg) {
            if ((this.SumOfNumsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SumOfNumsCompleted(this, new SumOfNumsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReadXmlFiles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReadXmlFiles(string path, string lni) {
            object[] results = this.Invoke("ReadXmlFiles", new object[] {
                        path,
                        lni});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReadXmlFilesAsync(string path, string lni) {
            this.ReadXmlFilesAsync(path, lni, null);
        }
        
        /// <remarks/>
        public void ReadXmlFilesAsync(string path, string lni, object userState) {
            if ((this.ReadXmlFilesOperationCompleted == null)) {
                this.ReadXmlFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadXmlFilesOperationCompleted);
            }
            this.InvokeAsync("ReadXmlFiles", new object[] {
                        path,
                        lni}, this.ReadXmlFilesOperationCompleted, userState);
        }
        
        private void OnReadXmlFilesOperationCompleted(object arg) {
            if ((this.ReadXmlFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadXmlFilesCompleted(this, new ReadXmlFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GenerateUnformatted", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GenerateUnformatted(string GDSDirectory, string VS, string rollup1) {
            object[] results = this.Invoke("GenerateUnformatted", new object[] {
                        GDSDirectory,
                        VS,
                        rollup1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateUnformattedAsync(string GDSDirectory, string VS, string rollup1) {
            this.GenerateUnformattedAsync(GDSDirectory, VS, rollup1, null);
        }
        
        /// <remarks/>
        public void GenerateUnformattedAsync(string GDSDirectory, string VS, string rollup1, object userState) {
            if ((this.GenerateUnformattedOperationCompleted == null)) {
                this.GenerateUnformattedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateUnformattedOperationCompleted);
            }
            this.InvokeAsync("GenerateUnformatted", new object[] {
                        GDSDirectory,
                        VS,
                        rollup1}, this.GenerateUnformattedOperationCompleted, userState);
        }
        
        private void OnGenerateUnformattedOperationCompleted(object arg) {
            if ((this.GenerateUnformattedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateUnformattedCompleted(this, new GenerateUnformattedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void SumOfNumsCompletedEventHandler(object sender, SumOfNumsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SumOfNumsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SumOfNumsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void ReadXmlFilesCompletedEventHandler(object sender, ReadXmlFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadXmlFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadXmlFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GenerateUnformattedCompletedEventHandler(object sender, GenerateUnformattedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateUnformattedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateUnformattedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591